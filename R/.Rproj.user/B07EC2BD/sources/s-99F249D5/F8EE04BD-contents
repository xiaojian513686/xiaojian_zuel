# Import and prune Tara
library(tidyverse)
library(trac)
library(ade4)
library(jsonlite)
library(reticulate)
library(vctrs)
library(rlang)
library(BiocManager)
library(ape)
library(phyloseq)
###### Source the different methods
source("D:/lunwen/lunwen_all//SDE_DDL/methods/SDE_DDL000.R")
source("D:/lunwen/lunwen_all//SDE_DDL/methods/SDE.R")
source("D:/lunwen/lunwen_all//SDE_DDL/methods/MXKF/KF.R")
source("D:/lunwen/lunwen_all//SDE_DDL/methods/LFMM.R")
methods <- c("SDE-DDL", "SDE",  "MXKF","LFMM")
length_w <- 10
FDR_levels <- seq(0.01, 0.2, length=length_w)
###############################
tax_table_to_phylo <- function (x, data = parent.frame(), collapse = TRUE) {
  err <- "Formula must be of the kind ~A1/A2/.../An."
  if (any(lapply(data, class) != "factor"))
    stop("Every column of data must be a factor.")
  if (length(x) != 2)
    stop(err)
  if (x[[1]] != "~")
    stop(err)
  f <- x[[2]]
  taxo <- list()
  while (length(f) == 3) {
    if (f[[1]] != "/")
      stop(err)
    f3.txt <- deparse(f[[3]])
    if (!is.factor(data[[f3.txt]]))
      stop(paste("Variable", f3.txt, "must be a factor"))
    taxo[[f3.txt]] <- data[[f3.txt]]
    if (length(f) > 1)
      f <- f[[2]]
  }
  f.txt <- deparse(f)
  if (!is.factor(data[[f.txt]]))
    stop(paste("Variable", f.txt, "must be a factor."))
  taxo[[f.txt]] <- data[[f.txt]]
  taxo.data <- as.data.frame(taxo)
  leaves.names <- as.character(taxo.data[, 1])
  taxo.data[, 1] <- 1:nrow(taxo.data)
  f.rec <- function(subtaxo) {
    u <- ncol(subtaxo)
    levels <- unique(subtaxo[, u])
    if (u == 1) {
      if (length(levels) != nrow(subtaxo))
        warning("leaves names are not unique.")
      return(as.character(subtaxo[, 1]))
    }
    t <- character(length(levels))
    for (l in 1:length(levels)) {
      x <- f.rec(subtaxo[subtaxo[, u] == levels[l], ][1:(u-1)])
      t[l] <- paste0("(", paste(x, collapse = ","), ")", "'", levels[l], "'")
    }
    t
  }
  string <- paste0(f.rec(taxo.data), ";")
  #string <- paste0("(", paste(f.rec(taxo.data), collapse = ","), ");")
  phy <- ape::read.tree(text = string)
  if (collapse)
    phy <- ape::collapse.singles(phy)
  phy$tip.label <- leaves.names[as.numeric(phy$tip.label)]
  phy
}

#' Convert from phylo to the A matrix used in trac.  Note this is similar to
#' the A used in rare, but with the column of all ones (for the root) removed

phylo_to_A <- function(phy) {
  nleaves <- length(phy$tip.label)
  g <- igraph::graph_from_edgelist(phy$edge,
                                   directed = TRUE)
  igraph::V(g)$name <- c(phy$tip.label, phy$node.label)
  num_nodes <- length(igraph::V(g))
  A <- cbind(Matrix::Diagonal(nleaves),
             Matrix::Matrix(0, nleaves, num_nodes - nleaves))
  for (i in seq(nleaves + 1, num_nodes)) {
    # for all nonleaf nodes
    leaves_of_i <- intersect(igraph::subcomponent(g, mode = "out", v = i),
                             1:nleaves)
    A[leaves_of_i, i] <- 1
  }
  A[, seq(nleaves + 1, num_nodes)] <- A[, rev(seq(nleaves + 1, num_nodes))]
  rownames(A) <- phy$tip.label
  colnames(A) <- c(phy$tip.label, rev(phy$node.label))
  A[, -ncol(A)] # remove the root, which is the rightmost column
}


#  Tara Oceans (Sunagawa et al., 2020)
# load phyloseq object from Aditya Mishra:
load("D:/lunwen/lunwen_all/SDE_DDL/trac-reproducible-main/tara/original/taraData.rda")

tara  <- physeq
map <- data.frame(metadata, row.names=metadata$SampleName)
sample_data(tara) <- map ## assign metadata to phyloseq object
tara
# phyloseq-class experiment-level object
# otu_table()   OTU Table:         [ 35651 taxa and 139 samples ]
# sample_data() Sample Data:       [ 139 samples by 53 sample variables ]
# tax_table()   Taxonomy Table:    [ 35651 taxa by 7 taxonomic ranks ]

## Save data to RDS file (all ocean taxa present)
saveRDS(tara, file = "D:/lunwen/lunwen_all/SDE_DDL/trac-reproducible-main/tara/original/tara.RDS")

## Prune samples
badTaxa = c("OTU1") # undefined across all ranks
allTaxa = taxa_names(tara)
allTaxa <- allTaxa[!(allTaxa %in% badTaxa)]
tara = prune_taxa(allTaxa, tara)

depths <- colSums(tara@otu_table@.Data) ## calculate sequencing depths

## Pruning (Minimum sequencing depth: at least 10000 reads per sample)
tara.filt1 <- prune_samples(depths > 10000, tara)
tara.filt1
# phyloseq-class experiment-level object
# otu_table()   OTU Table:         [ 35650 taxa and 139 samples ]
# sample_data() Sample Data:       [ 139 samples by 53 sample variables ]
# tax_table()   Taxonomy Table:    [ 35650 taxa by 7 taxonomic ranks ]

## Pruning (taxa present in at least 10% of samples)
freq <- rowSums(sign(tara.filt1@otu_table@.Data))
tara.filt2 <- prune_taxa(freq > 0.1 * nsamples(tara.filt1), tara.filt1)
tara.filt2
# phyloseq-class experiment-level object
# otu_table()   OTU Table:         [ 8916 taxa and 139 samples ]
# sample_data() Sample Data:       [ 139 samples by 53 sample variables ]
# tax_table()   Taxonomy Table:    [ 8916 taxa by 7 taxonomic ranks ]


## Save data to RDS file (taxa present in at least 10% of samples)
saveRDS(tara.filt2, file = "D:/lunwen/lunwen_all/SDE_DDL/trac-reproducible-main/tara/original/tara_10.RDS")

