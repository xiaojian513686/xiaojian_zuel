# This is a modification of the file "original/Data Analysis Pipeline for Soil PH Dataset.R"
# from Washburne, in which we instead create a phyloseq object
library(tidyverse)
library(trac)
library(ade4)
library(jsonlite)
library(reticulate)
library(vctrs)
library(rlang)
library(BiocManager)
library(ape)
library(phyloseq)
###### Source the different methods
source("D:/lunwen/lunwen_all//SDE_DDL/methods/SDE_DDL000.R")
source("D:/lunwen/lunwen_all//SDE_DDL/methods/SDE.R")
source("D:/lunwen/lunwen_all//SDE_DDL/methods/MXKF/KF.R")
methods <- c("SDE-DDL", "SDE",  "MXKF")
length_w <- 10
FDR_levels <- seq(0.01, 0.2, length=length_w)
###############################
tax_table_to_phylo <- function (x, data = parent.frame(), collapse = TRUE) {
  err <- "Formula must be of the kind ~A1/A2/.../An."
  if (any(lapply(data, class) != "factor"))
    stop("Every column of data must be a factor.")
  if (length(x) != 2)
    stop(err)
  if (x[[1]] != "~")
    stop(err)
  f <- x[[2]]
  taxo <- list()
  while (length(f) == 3) {
    if (f[[1]] != "/")
      stop(err)
    f3.txt <- deparse(f[[3]])
    if (!is.factor(data[[f3.txt]]))
      stop(paste("Variable", f3.txt, "must be a factor"))
    taxo[[f3.txt]] <- data[[f3.txt]]
    if (length(f) > 1)
      f <- f[[2]]
  }
  f.txt <- deparse(f)
  if (!is.factor(data[[f.txt]]))
    stop(paste("Variable", f.txt, "must be a factor."))
  taxo[[f.txt]] <- data[[f.txt]]
  taxo.data <- as.data.frame(taxo)
  leaves.names <- as.character(taxo.data[, 1])
  taxo.data[, 1] <- 1:nrow(taxo.data)
  f.rec <- function(subtaxo) {
    u <- ncol(subtaxo)
    levels <- unique(subtaxo[, u])
    if (u == 1) {
      if (length(levels) != nrow(subtaxo))
        warning("leaves names are not unique.")
      return(as.character(subtaxo[, 1]))
    }
    t <- character(length(levels))
    for (l in 1:length(levels)) {
      x <- f.rec(subtaxo[subtaxo[, u] == levels[l], ][1:(u-1)])
      t[l] <- paste0("(", paste(x, collapse = ","), ")", "'", levels[l], "'")
    }
    t
  }
  string <- paste0(f.rec(taxo.data), ";")
  #string <- paste0("(", paste(f.rec(taxo.data), collapse = ","), ");")
  phy <- ape::read.tree(text = string)
  if (collapse)
    phy <- ape::collapse.singles(phy)
  phy$tip.label <- leaves.names[as.numeric(phy$tip.label)]
  phy
}

#' Convert from phylo to the A matrix used in trac.  Note this is similar to
#' the A used in rare, but with the column of all ones (for the root) removed

phylo_to_A <- function(phy) {
  nleaves <- length(phy$tip.label)
  g <- igraph::graph_from_edgelist(phy$edge,
                                   directed = TRUE)
  igraph::V(g)$name <- c(phy$tip.label, phy$node.label)
  num_nodes <- length(igraph::V(g))
  A <- cbind(Matrix::Diagonal(nleaves),
             Matrix::Matrix(0, nleaves, num_nodes - nleaves))
  for (i in seq(nleaves + 1, num_nodes)) {
    # for all nonleaf nodes
    leaves_of_i <- intersect(igraph::subcomponent(g, mode = "out", v = i),
                             1:nleaves)
    A[leaves_of_i, i] <- 1
  }
  A[, seq(nleaves + 1, num_nodes)] <- A[, rev(seq(nleaves + 1, num_nodes))]
  rownames(A) <- phy$tip.label
  colnames(A) <- c(phy$tip.label, rev(phy$node.label))
  A[, -ncol(A)] # remove the root, which is the rightmost column
}



# OTU Table
Data <- read.csv('D:/lunwen/lunwen_all/SDE_DDL/trac-reproducible-main/CentralParkSoil/original/otu_table_wTax_40000_filt2.txt',
                 sep = '\t',
                 row.names = 1,
                 quote = '#')
taxonomy <- Data[, dim(Data)[2]]
Data <- Data[, 1:(dim(Data)[2] - 1)] # OTU by sample

otus <- rownames(Data) %>% str_replace('\"', '') %>% str_replace('\"', '')
rownames(Data) <- otus
colnames(Data) <- colnames(Data) %>% str_remove("^X.") %>% str_remove(".$")

taxonomy <- taxonomy %>% str_remove_all('\"')
Tax <- tibble(taxonomy = taxonomy) %>% 
  separate(col = taxonomy,
                 into = c("Kingdom", 
                          "Phylum",
                          "Class",
                          "Order",
                          "Family",
                          "Genus",
                          "Species"),
                 sep = "; ") %>% 
  as.matrix()
rownames(Tax) <- otus

# Sample data
MAP <- read.csv('D:/lunwen/lunwen_all/SDE_DDL/trac-reproducible-main/CentralParkSoil/original/CP_map.txt', sep = '\t', header = TRUE)
sample_names <- as.character(MAP$X.SampleID)
rownames(MAP) <- sample_names

# reorder columns of Data to match order in MAP:
Data <- Data[, sample_names]

# Phylogeny
tree <- read.tree('D:/lunwen/lunwen_all/SDE_DDL/trac-reproducible-main/CentralParkSoil/original/rep_set_aligned_gapfilt20_filt2.tre')
otus <- tree$tip.label

# reorder rows of Data and Tax to match order in tree tip labels:
Data <- Data[tree$tip.label, ]
Tax <- Tax[tree$tip.label, ]

# create phyloseq object:
sampledata <- sample_data(MAP)
otu <- otu_table(Data, taxa_are_rows = TRUE)
tax <- tax_table(Tax)
cps <- phyloseq(sampledata, otu, tax, tree)
saveRDS(cps, file = "D:/lunwen/lunwen_all/SDE_DDL/trac-reproducible-main/CentralParkSoil/original/cps.RDS")

